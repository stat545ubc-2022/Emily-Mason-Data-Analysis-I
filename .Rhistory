install.packages("devtools")
install.packages("devtools")
devtools::install_github("UBC-MDS/datateachr")
library(datateachr)
library(tidyverse)
## EXPLORE HERE ###
#looking at each data set to obtain the following attributes: dim(dataset) to find # variables, # rows, and summary(dataset) to find # of numerical variables
dim(steam_games)
summary(steam_games)
# Steam: variables = 21, # rows = 40,833, # numerical variables = 4
plot(achievements~original_price, data=steam_games)
ggplot(steam_games, aes(x=achievements, col=developer)) + geom_density()
plot(achievements~original_price, data=steam_games)
plot(achievements~original_price, data=steam_games, xlim=200)
install.packages("devtools")
install.packages("devtools")
devtools::install_github("UBC-MDS/datateachr")
library(datateachr)
library(tidyverse)
summary(cancer_sample)
ggplot(steam_games, aes(x=area_mean)) + geom_histogram(binwidth=50, colour = orange)
ggplot(steam_games, aes(x=area_mean)) + geom_histogram(binwidth=50, colour = "orange")
ggplot(cancer_sample, aes(x=area_mean)) + geom_histogram(binwidth=50, colour = "orange")
ggplot(cancer_sample, aes(x=area_mean, col=diagnosis)) + geom_density()
plot(area_mean~symmetry_mean, data=cancer_sample)
ggplot(cancer_sample, aes(x=area_mean, col=diagnosis)) + geom_density()
boxplot(cancer_sample$area_mean, horizontal = TRUE, main ="distribution of tumor area means", xlab="mean areas")
ggplot(cancer_sample, aes(x=area_mean)) + geom_histogram(binwidth=50, colour = "orange")
ggplot(cancer_sample, aes(x=area_mean)) + geom_histogram(binwidth=50, colour = "purple")
ggplot(cancer_sample, aes(x=area_mean, col=diagnosis)) + geom_density()
#filtering data to include only patients with "M" diagnosis
filter(cancer_sample, diagnosis == "M")
#filtering data to include only patients with "M" diagnosis
M patients <- filter(cancer_sample, diagnosis == "M")
#filtering data to include only patients with "M" diagnosis
M_patients <- filter(cancer_sample, diagnosis == "M")
ggplot(cancer_sample, aes(x=area_mean)) + geom_histogram(binwidth=50, colour = "purple")
ggplot(cancer_sample, aes(x=area_mean, col=diagnosis)) + geom_density()
boxplot(cancer_sample$area_mean, horizontal = TRUE, main ="distribution of tumor area means", xlab="mean areas")
ggplot(cancer_sample, aes(x=area_mean, col=diagnosis)) + geom_density()
summary(cancer_sample)
large_perimeter <- filter(cancer_sample, perimeter_mean > "104.10")
large_perimeter <- filter(cancer_sample, perimeter_mean > "104.10")
med_perimeter <- subset(cancer_sample, perimeter_mean > 91.97, <104.09)
large_perimeter <- filter(cancer_sample, perimeter_mean > "104.10")
med_perimeter <- subset(cancer_sample, perimeter_mean > 91.97 <104.09)
large_perimeter <- filter(cancer_sample, perimeter_mean > "104.10")
med_perimeter <- filter(cancer_sample, perimeter_mean > 91.97 <104.09)
large_perimeter <- filter(cancer_sample, perimeter_mean > "104.10")
med_perimeter <- filter(cancer_sample, perimeter_mean > "91.97", <"104.09")
large_perimeter <- filter(cancer_sample, perimeter_mean > "104.10")
med_perimeter <- filter(cancer_sample, perimeter_mean > "91.97" <"104.09")
large_perimeter <- filter(cancer_sample, perimeter_mean > "104.10")
med_perimeter <- filter(cancer_sample, perimeter_mean > "91.97")
large_perimeter <- filter(cancer_sample, perimeter_mean > "104.10")
med_perimeter <- filter(cancer_sample, perimeter_mean > "91.97")
sm_perimeter <- subset(cancer_sample, perimeter_mean < "91.96")
### 1.2 (3 points)
large_perimeter <- subset(cancer_sample, perimeter_mean > "104.10")
med_perimeter <- subset(cancer_sample, perimeter_mean > "91.97")
sm_perimeter <- subset(cancer_sample, perimeter_mean < "91.96")
perimeter_category <- cut(cancer_sample$perimeter_mean, c(75.17, 91.97, 104.10, 188.50))
perimeter_category <- cut(cancer_sample$perimeter_mean, c(75.17, 91.97, 104.10, 188.50))
perimeter_category
perimeter_category <- cut(cancer_sample$perimeter_mean, seq(0,200,25), right=FALSE, labels= c(1:8))
perimeter_category
#graphing selection: #1
ggplot(cancer_sample, aes(x=perimeter_category, fill=diagnosis)) + geom_bar(position="dodge")
perimeter_category <- cut(cancer_sample$perimeter_mean, seq(0,200,25), right=FALSE, labels= c(0-24, 25-49, 50-74, 75-99, 100-124, 125-149, 150-174, 175-200))
#graphing selection: #1
ggplot(cancer_sample, aes(x=perimeter_category, fill=diagnosis)) + geom_bar(position="dodge")
perimeter_category <- cut(cancer_sample$perimeter_mean, seq(0,200,25), right=FALSE, labels= c(1:8))
#graphing selection: #1
ggplot(cancer_sample, aes(x=perimeter_category, fill=diagnosis)) + geom_bar(position="dodge")
#graphing selection: #1
ggplot(cancer_sample, aes(x=perimeter_category, fill=diagnosis)) + geom_bar(position="dodge") +geom_density
#graphing selection: #1
ggplot(cancer_sample, aes(x=perimeter_category, fill=diagnosis)) + geom_bar(position="dodge") +geom_density()
#graphing selection: #1
ggplot(cancer_sample, aes(x=perimeter_category, fill=diagnosis)) + geom_bar(position="dodge")
#graphing selection: #1
ggplot(cancer_sample, aes(x=perimeter_category, fill=diagnosis)) + geom_bar(position="dodge") + geom_density()
summary(cancer_sample$smoothness_mean)
#creating categorical variables from numerical:
summary_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.9), right=FALSE, labels =c("low", "high"))
#creating categorical variables from numerical:
summary_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), right=FALSE, labels =c("low", "high"))
#creating categorical variables from numerical:
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), right=FALSE, labels =c("low", "high"))
summary(cancer_sample$symmetry_mean)
#creating categorical variables from numerical:
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), right=FALSE, labels =c("low", "high"))
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.15), right=FALSE, labels =c(1:2))
##Research Question 1 ----------------------------
# summarizing selection: #4
#creating categories from mean area
summary(cancer_sample$area_mean)
area_cat <- cut(cancer_sample$area_mean, seq(0,))
##Research Question 1 ----------------------------
# summarizing selection: #4
#creating categories from mean area
summary(cancer_sample$area_mean)
area_cat <- cut(cancer_sample$area_mean, seq(0,2500,250), labels=c(1:10))
#creating categories from mean area
summary(cancer_sample$area_mean)
area_cat <- cut(cancer_sample$area_mean, seq(0,2500,250), labels=c(1:10))
#summary stats:
table(cancer_sample$diagnosis, area_cat)
##Research Question 2------------------------------
#summarizing selection:
#creating categories from mean area
summary(cancer_sample$area_mean)
area_cat <- cut(cancer_sample$area_mean, seq(0,2500,250), labels=c(1:10))
#summary stats: contingency table
table1 <- table(cancer_sample$diagnosis, area_cat)
##Research Question 2------------------------------
#summarizing selection:
#creating categories from mean area
summary(cancer_sample$area_mean)
area_cat <- cut(cancer_sample$area_mean, seq(0,2500,250), labels=c(1:10))
#summary stats: contingency table
table1 <- table(cancer_sample$diagnosis, area_cat)
prop.table(table1)
# graphing selection: #6
ggplot(cancer_sample, aes(x=area_mean, col=diagnosis)) + geom_density()
#graphing selection: #7
plot(area_mean~texture_mean, data=cancer_sample)
#graphing selection: #7
plot(area_mean~texture_mean, data=cancer_sample, aes(xlab="Mean Texture", ylab="Mean Area"))
#graphing selection: #7
plot(area_mean~texture_mean, data=cancer_sample,xlab="Mean Texture" ylab="Mean Area"))
#graphing selection: #7
plot(area_mean~texture_mean, data=cancer_sample, xlab="Mean Texture" ylab="Mean Area"))
#graphing selection: #7
plot(area_mean~texture_mean, data=cancer_sample, alpha=0.5))
#graphing selection: #7
plot(area_mean~texture_mean, data=cancer_sample))
#graphing selection: #7
plot(area_mean~texture_mean, data=cancer_sample)
# graphing selection: #6
ggplot(cancer_sample, aes(x=area_mean, col=diagnosis)) + geom_density()
#graphing selection: #6
plot(area_mean~texture_mean, data=cancer_sample, log='x')
#graphing selection: #6
plot(area_mean~texture_mean, data=cancer_sample, log='x', xlab=c("Mean Texture (log)"))
#graphing selection: #6
plot(area_mean~texture_mean, data=cancer_sample, log='x', xlab=c("Mean Texture (log)", ylab=c(Mean Area)))
#graphing selection: #6
plot(area_mean~texture_mean, data=cancer_sample, log='x', xlab=c("Mean Texture (log)", ylab=c("Mean Area")))
#graphing selection: #6
plot(area_mean~texture_mean, data=cancer_sample, log='x', xlab=c("Mean Texture (log)"), ylab=c("Mean Area"))
#graphing selection: #6
plot(area_mean~texture_mean, data=cancer_sample, log='x', xlab=c("Mean Texture (log)"), ylab=c("Mean Area"), main="Tumor Area as Function of Texture")
#graphing selection: #6
plot(area_mean~texture_mean, data=cancer_sample, log='x', xlab=c("Mean Texture (log)"), ylab=c("Mean Area"), colour=c(diagnosis) main="Tumor Area as Function of Texture")
#graphing selection: #6
plot(area_mean~texture_mean, data=cancer_sample, log='x', xlab=c("Mean Texture (log)"), ylab=c("Mean Area"), colour=(diagnosis) main="Tumor Area as Function of Texture")
#graphing selection: #6
plot(area_mean~texture_mean, data=cancer_sample, log='x', xlab=c("Mean Texture (log)"), ylab=c("Mean Area"), colour=c("diagnosis") main="Tumor Area as Function of Texture")
#graphing selection: #6
plot(area_mean~texture_mean, data=cancer_sample, log='x', xlab=c("Mean Texture (log)"), ylab=c("Mean Area"), main="Tumor Area as Function of Texture")
# graphing selection: #7
plot(area_mean~perimeter_mean, data=cancer_sample, xlab=c("Mean Area"), ylab=c("Mean Perimeter"), main="Tumor Dimensions of Benign and Malignant Tumors")
ggplot(cancer_sample, aes(x=area_mean, y=perimeter_mean, color=diagnosis)) + geom_point
ggplot(cancer_sample, aes(x=area_mean, y=perimeter_mean, color=diagnosis)) + geom_point()
ggplot(cancer_sample, aes(x=area_mean, y=perimeter_mean, color=symmetry_cat)) + geom_point()
ggplot(cancer_sample, aes(x=area_mean, y=perimeter_mean, color=smooth_cat)) + geom_point()
ggplot(cancer_sample, aes(x=area_mean, y=perimeter_mean, color=diagnosis)) + geom_point()
ggplot(cancer_sample, aes(x=area_mean, y=perimeter_mean, color=diagnosis), col=alpha(cols,0.4)) + geom_point()
ggplot(cancer_sample, aes(x=area_mean, y=perimeter_mean, color=diagnosis), col=alpha(cols,0.5)) + geom_point()
ggplot(cancer_sample, aes(x=area_mean, y=perimeter_mean, color=diagnosis), col= alpha(cols,0.5)) + geom_point()
ggplot(cancer_sample, aes(x=area_mean, y=perimeter_mean, color=diagnosis)), + geom_point(alpha=0.1)
ggplot(cancer_sample, aes(x=area_mean, y=perimeter_mean, color=diagnosis)) + geom_point(alpha=0.1)
ggplot(cancer_sample, aes(x=area_mean, y=perimeter_mean, color=diagnosis)) + geom_point(alpha=0.5)
#graphing selection: #6
plot(area_mean~texture_mean, data=cancer_sample, log='x', xlab=c("Mean Texture (log)"), ylab=c("Mean Area"), main="Tumor Area as Function of Texture")
ggplot(cancer_sample, aes(x=area_mean, y=texture_mean, colour=diagnosis), log='x', xlab=c("Mean Texture (log)"), ylab=c("Mean Area"), main="Tumor Area as a Function of Texture")
ggplot(cancer_sample, aes(x=area_mean, y=texture_mean, color=diagnosis), log='x', xlab=c("Mean Texture (log)"), ylab=c("Mean Area"), main="Tumor Area as a Function of Texture")
#graphing selection: #6
plot(area_mean~texture_mean, data=cancer_sample, log='x', xlab=c("Mean Texture (log)"), ylab=c("Mean Area"), main="Tumor Area as Function of Texture")
#graphing selection: #6
plot(area_mean~texture_mean, data=cancer_sample, log='x', xlab=c("Mean Texture (log)"), ylab=c("Mean Area"), main="Tumor Area as Function of Texture", aes(color=diagnosis))
#graphing selection: #6
plot(area_mean~texture_mean, data=cancer_sample, log='x', xlab=c("Mean Texture (log)"), ylab=c("Mean Area"), main="Tumor Area as Function of Texture")
ggplot(cancer_sample, aes(x=area_mean, y=perimeter_mean, color=area_cat)) + geom_point(alpha=0.5)
#to show the cut function worked to categorize tumor area in ascending values:
ggplot(cancer_sample, aes(x=area_mean, y=perimeter_mean, color=area_cat)) + geom_point(alpha=0.5)
#to show how diagnosis is distributed among tumor dimensions
ggplot(cancer_sample, aes(x=area_mean, y=perimeter_mean, color=diagnosis)) + geom_point(alpha=0.5)
#graphing selection: #6
plot(area_mean~texture_mean, data=cancer_sample, log='x', xlab=c("Mean Texture (log)"), ylab=c("Mean Area"), main="Tumor Area as Function of Texture")
##Research Question 2------------------------------
#summarizing selection: #3
summary(cancer_sample$texture_mean)
text_cat <- cut(cancer_sample$texture_mean), seq(0,40,10), labels=c("lowest","low","some","High")
text_cat <- cut(cancer_sample$texture_mean, seq(0,40,10), labels=c("lowest","low","some","High"))
text_cat <- cut(cancer_sample$texture_mean, seq(0,40,10), labels=c("lowest","low","some","High"))
text_cat
#graphing selection: #6/#7
ggplot(cancer_sample, aes(x=area_mean, y=texture_mean, color=text_cat)) + geom_point(alpha=0.5)
##Research Question 3-------------------------------
#summarizing selection:
#graphing selection:
#to show the cut function worked to categorize tumor area in ascending values:
ggplot(cancer_sample, aes(x=area_mean, y=perimeter_mean, color=area_cat)) + geom_point(alpha=0.5)
#to show how diagnosis is distributed among tumor dimensions
ggplot(cancer_sample, aes(x=area_mean, y=perimeter_mean, color=diagnosis)) + geom_point(alpha=0.5)
#to show the cut function worked to categorize tumor area in ascending values:
ggplot(cancer_sample, aes(x=area_mean, y=perimeter_mean, color=area_cat)) + geom_point(alpha=0.5)
##Research Question 3-------------------------------
#summarizing selection: #3 (for both variables)
summary(cancer_sample$symmetry_mean)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
#graphing selection:
summary(cancer_sample$smoothness_mean)
#graphing selection:
##Research Question 3-------------------------------
#summarizing selection: #3 (for both variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, y=smooth_cat))
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, y=smooth_cat)) + geom_bar
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, y=smooth_cat)) + geom_bar()
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, fill=smooth_cat)) + geom_bar(position="dodge")
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, fill=smooth_cat)) + geom_bar(position="dodge") + geom_density()
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, fill=smooth_cat)) + geom_bar(position="dodge") + geom_line()
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, fill=smooth_cat)) + geom_point()
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, y=smooth_cat)) + geom_point()
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, y=smoothness_mean)) + geom_point()
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, y=smoothness_mean)) + geom_histogram()
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, y=smoothness_mean)) + geom_point()
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, y=smoothness_mean)) + geom_point(aes(colour=diagnosis))
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, y=smoothness_mean)) + geom_point(aes(colour=smooth_cat))
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, y=smoothness_mean)) + geom_point(aes(colour=smooth_cat), alpha=0.5)
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, y=smoothness_mean)) + geom_point(aes(colour=area_cat), alpha=0.5)
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, y=smoothness_mean)) + geom_point(aes(colour=id), alpha=0.5)
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, y=smoothness_mean)) + geom_point(aes(colour=perimeter_category), alpha=0.5)
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, y=smoothness_mean)) + geom_point(alpha=0.5)
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, y=smoothness_mean)) + geom_point(alpha=0.5) + geom_smooth()
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, y=smoothness_mean)) + geom_histogram()
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, y=smoothness_mean)) + geom_boxplot()
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, y=smoothness_mean)) + geom_boxplot() + geom_errorbar()
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, y=smoothness_mean)) + geom_boxplot() + geom_errorbar(aes())
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, y=smoothness_mean)) + geom_boxplot()
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_cat, y=smoothness_mean)) + geom_boxplot() + geom_errorbar(aes(ymin="0", ymax="0.20"))
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_mean, y=smoothness_mean)) + geom_point(alpha=0.5) + geom_line()
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_mean, y=smoothness_mean), color=diagnosi) + geom_point(alpha=0.5) + geom_line()
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_mean, y=smoothness_mean), color=diagnosis) + geom_point(alpha=0.5) + geom_line()
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_mean, y=smoothness_mean, colour=symmetry_cat)) + geom_point(alpha=0.5) + geom_line()
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_mean, y=smoothness_mean, colour=diagnosis)) + geom_point(alpha=0.5) + geom_line()
##Research Question 3-------------------------------
#summarizing selection: #3 (for symmetry variables)
symmetry_cat <- cut(cancer_sample$symmetry_mean, seq(0,0.30,0.1), labels=c("low","medium","high"))
smooth_cat <- cut(cancer_sample$smoothness_mean, seq(0,0.18,0.09), labels=c("rough", "smooth"))
#graphing selection:#5
ggplot(cancer_sample, aes(x=symmetry_mean, y=smoothness_mean, colour=smooth_cat)) + geom_point(alpha=0.5) + geom_line()
#7 showing color with texture categories
ggplot(cancer_sample, aes(x=area_mean, y=texture_mean, color=text_cat)) + geom_point(alpha=0.5)
#graphing selection: #5
ggplot(cancer_sample, aes(x=perimeter_category, fill=diagnosis)) + geom_bar(position="dodge") + geom_density()
#graphing selection: #5
ggplot(cancer_sample, aes(x=perimeter_category, fill=diagnosis)) + geom_bar(position="dodge") + geom_errorbar()
#graphing selection: #5
ggplot(cancer_sample, aes(x=perimeter_category, fill=diagnosis)) + geom_bar(position="dodge") + geom_line()
#graphing selection: #5
ggplot(cancer_sample, aes(x=perimeter_category, fill=diagnosis)) + geom_bar(position="dodge") + geom_line(y=perimeter_mean)
#graphing selection: #5
ggplot(cancer_sample, aes(x=perimeter_category, fill=diagnosis)) + geom_bar(position="dodge") + geom_line(y=cancer_sample$perimeter_mean)
#graphing selection: #5
ggplot(cancer_sample, aes(x=perimeter_category, fill=diagnosis)) + geom_bar(position="dodge") + geom_point(y=cancer_sample$perimeter_mean)
#graphing selection: #5
ggplot(cancer_sample, aes(x=perimeter_category, fill=diagnosis)) + geom_bar(position="dodge") + geom_point(y=cancer_sample$area_mean)
#graphing selection: #5
ggplot(cancer_sample, aes(x=perimeter_category, fill=diagnosis)) + geom_bar(position="dodge") + geom_point(y=cancer_sample$texture_mean)
#graphing selection: #5
ggplot(cancer_sample, aes(x=perimeter_category, fill=diagnosis)) + geom_bar(position="dodge") + geom_line(y=cancer_sample$texture_mean)
#graphing selection: #5
ggplot(cancer_sample, aes(x=perimeter_category, fill=diagnosis)) + geom_bar(position="dodge") + geom_line(x=perimeter_mean, y=cancer_sample$texture_mean)
#graphing selection: #5
ggplot(cancer_sample, aes(x=perimeter_category, fill=diagnosis)) + geom_bar(position="dodge") + geom_point(cancer_sample, aes(x=perimeter_mean, y=area_mean))
#graphing selection: #5
ggplot(cancer_sample, aes(x=perimeter_category, fill=diagnosis)) + geom_bar(position="dodge") + geom_point(cancer_sample, aes(x=perimeter_mean, y=area_mean))
#graphing selection: #5
ggplot(cancer_sample, aes(x=perimeter_category, fill=diagnosis)) + geom_bar(position="dodge") + geom_line(x=cancer_sample$perimeter_mean, y=cancer_sample$area_mean)
#graphing selection: #5
ggplot(cancer_sample, aes(x=perimeter_category, fill=diagnosis)) + geom_bar(position="dodge") + geom_point(y=cancer_sample$perimeter_mean)
`{r, message = FALSE} library(datateachr) # <- might contain the data you picked! library(tidyverse)`
library(datateachr)
library(tidyverse)
# Task 1: Tidy your data (15 points)
cancer_sample
Based on the definition above, can you identify if your data is tidy or
#Variable 3:
summary(cancer_sample)
library(datateachr)
library(tidyverse)
library(dplyr)
#Variable 1: ID
cancer_sample$ID
#Variable 1: ID
summary(cancer_sample$ID)
##Variables selected: ID, Diagnosis, radius_mean, texture_mean, perimeter_mean, area_mean, smoothness_mean, compactness_mean
cancer_sample
##Variables selected: ID, Diagnosis, radius_mean, texture_mean, perimeter_mean, area_mean, smoothness_mean, compactness_mean
cancer_sample
#This data can be considered tidy because it meets the three requirements. Each row refers to one patient sample, each column considered here can be considered a variable, and each cell has an entry.
use is.na(cancer_sample$radius_mean)
##Variables selected: ID, Diagnosis, radius_mean, texture_mean, perimeter_mean, area_mean, smoothness_mean, compactness_mean
cancer_sample
#This data can be considered tidy because it meets the three requirements. Each row refers to one patient sample, each column considered here can be considered a variable, and each cell has an entry.
is.na(cancer_sample$radius_mean)
##Variables selected: ID, Diagnosis, radius_mean, texture_mean, perimeter_mean, area_mean, smoothness_mean, compactness_mean
cancer_sample
#This data can be considered tidy because it meets the three requirements. Each row refers to one patient sample, each column considered here can be considered a variable, and each cell has an entry (as determined using is.na below)
is.na(cancer_sample$radius_mean)
is.na(cancer_sample$texture_mean)
##Variables selected: ID, Diagnosis, radius_mean, texture_mean, perimeter_mean, area_mean, smoothness_mean, compactness_mean
cancer_sample
#This data can be considered tidy because it meets the three requirements. Each row refers to one patient sample, each column considered here can be considered a variable, and each cell has an entry (as determined using is.na below)
is.na(cancer_sample$radius_mean)
is.na(cancer_sample$texture_mean)
is.na(cancer_sample$perimeter_mean)
##Variables selected: ID, Diagnosis, radius_mean, texture_mean, perimeter_mean, area_mean, smoothness_mean, compactness_mean
cancer_sample
#This data can be considered tidy because it meets the three requirements. Each row refers to one patient sample, each column considered here can be considered a variable, and each cell has an entry (as verified using is.na below)
is.na(cancer_sample$radius_mean)
is.na(cancer_sample$texture_mean)
is.na(cancer_sample$perimeter_mean)
is.na(cancer_sample$area_mean)
##Variables selected: ID, Diagnosis, radius_mean, texture_mean, perimeter_mean, area_mean, smoothness_mean, compactness_mean
cancer_sample
#This data can be considered tidy because it meets the three requirements. Each row refers to one patient sample, each column considered here can be considered a variable, and each cell has an entry (as verified using is.na below)
is.na(cancer_sample$radius_mean)
is.na(cancer_sample$texture_mean)
is.na(cancer_sample$perimeter_mean)
is.na(cancer_sample$area_mean)
is.na(cancer_sample$smoothness_mean)
##Variables selected: ID, Diagnosis, radius_mean, texture_mean, perimeter_mean, area_mean, smoothness_mean, compactness_mean
cancer_sample
#This data can be considered tidy because it meets the three requirements. Each row refers to one patient sample, each column considered here can be considered a variable, and each cell has an entry (as verified using is.na below)
is.na(cancer_sample$radius_mean)
is.na(cancer_sample$texture_mean)
is.na(cancer_sample$perimeter_mean)
is.na(cancer_sample$area_mean)
is.na(cancer_sample$smoothness_mean)
is.na(cancer_sample$compactness_mean)
##Variables selected: ID, Diagnosis, radius_mean, texture_mean, perimeter_mean, area_mean, smoothness_mean, compactness_mean
cancer_sample
#This data can be considered tidy because it meets the three requirements. Each row refers to one patient sample, each column considered here can be considered a variable, and each cell has an entry (as verified using is.na below)
is.na(cancer_sample$ID)
is.na(cancer_sample$radius_mean)
is.na(cancer_sample$texture_mean)
is.na(cancer_sample$perimeter_mean)
is.na(cancer_sample$area_mean)
is.na(cancer_sample$smoothness_mean)
is.na(cancer_sample$compactness_mean)
##since the dataset can be considered tidy, I will untidy the data first:
df %>%
pivot_wider(names_from = Diagnosis, values_from = compactness_mean)
##since the dataset can be considered tidy, I will untidy the data first:
df %>%
pivot_wider(cancer_sample, names_from = Diagnosis, values_from = compactness_mean)
